IncomingMessage {
	   _readableState: ReadableState {
	     objectMode: false,
	     highWaterMark: 16384,
	     buffer: BufferList { head: null, tail: null, length: 0 },
	     length: 0,
	     pipes: [],
	     flowing: true,
	     ended: true,
	     endEmitted: true,
	     reading: false,
	     constructed: true,
	     sync: false,
	     needReadable: false,
	     emittedReadable: false,
	     readableListening: false,
	     resumeScheduled: false,
	     errorEmitted: false,
	     emitClose: true,
	     autoDestroy: true,
	     destroyed: false,
	     errored: null,
	     closed: false,
	     closeEmitted: false,
	     defaultEncoding: 'utf8',
	     awaitDrainWriters: null,
	     multiAwaitDrain: false,
	     readingMore: false,
	     dataEmitted: true,
	     decoder: null,
	     encoding: null,
	     [Symbol(kPaused)]: false
	   },
	   _events: [Object: null prototype] {},
	   _eventsCount: 0,
	   _maxListeners: undefined,
	   socket: <ref *1> Socket {
	     connecting: false,
	     _hadError: false,
	     _parent: null,
	     _host: null,
	     _closeAfterHandlingError: false,
	     _readableState: ReadableState {
	       objectMode: false,
	       highWaterMark: 16384,
	       buffer: BufferList { head: null, tail: null, length: 0 },
	       length: 0,
	       pipes: [],
	       flowing: true,
	       ended: false,
	       endEmitted: false,
	       reading: true,
	       constructed: true,
	       sync: false,
	       needReadable: true,
	       emittedReadable: false,
	       readableListening: false,
	       resumeScheduled: false,
	       errorEmitted: false,
	       emitClose: false,
	       autoDestroy: true,
	       destroyed: false,
	       errored: null,
	       closed: false,
	       closeEmitted: false,
	       defaultEncoding: 'utf8',
	       awaitDrainWriters: null,
	       multiAwaitDrain: false,
	       readingMore: false,
	       dataEmitted: false,
	       decoder: null,
	       encoding: null,
	       [Symbol(kPaused)]: false
	     },
	     _events: [Object: null prototype] {
	       end: [Array],
	       timeout: [Function: socketOnTimeout],
	       data: [Function: bound socketOnData],
	       error: [Function: socketOnError],
	       close: [Array],
	       drain: [Function: bound socketOnDrain],
	       resume: [Function: onSocketResume],
	       pause: [Function: onSocketPause]
	     },
	     _eventsCount: 8,
	     _maxListeners: undefined,
	     _writableState: WritableState {
	       objectMode: false,
	       highWaterMark: 16384,
	       finalCalled: false,
	       needDrain: false,
	       ending: false,
	       ended: false,
	       finished: false,
	       destroyed: false,
	       decodeStrings: false,
	       defaultEncoding: 'utf8',
	       length: 0,
	       writing: false,
	       corked: 0,
	       sync: false,
	       bufferProcessing: false,
	       onwrite: [Function: bound onwrite],
	       writecb: null,
	       writelen: 0,
	       afterWriteTickInfo: null,
	       buffered: [],
	       bufferedIndex: 0,
	       allBuffers: true,
	       allNoop: true,
	       pendingcb: 0,
	       constructed: true,
	       prefinished: false,
	       errorEmitted: false,
	       emitClose: false,
	       autoDestroy: true,
	       errored: null,
	       closed: false,
	       closeEmitted: false,
	       [Symbol(kOnFinished)]: []
	     },
	     allowHalfOpen: true,
	     _sockname: null,
	     _pendingData: null,
	     _pendingEncoding: '',
	     server: Server {
	       maxHeaderSize: undefined,
	       insecureHTTPParser: undefined,
	       requestTimeout: 300000,
	       headersTimeout: 60000,
	       keepAliveTimeout: 5000,
	       connectionsCheckingInterval: 30000,
	       requireHostHeader: true,
	       joinDuplicateHeaders: undefined,
	       rejectNonStandardBodyWrites: false,
	       _events: [Object: null prototype],
	       _eventsCount: 5,
	       _maxListeners: undefined,
	       _connections: 5,
	       _handle: [TCP],
	       _usingWorkers: false,
	       _workers: [],
	       _unref: false,
	       allowHalfOpen: true,
	       pauseOnConnect: false,
	       noDelay: true,
	       keepAlive: false,
	       keepAliveInitialDelay: 0,
	       highWaterMark: 16384,
	       httpAllowHalfOpen: false,
	       timeout: 0,
	       maxHeadersCount: null,
	       maxRequestsPerSocket: 0,
	       _connectionKey: '6::::3000',
	       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
	       [Symbol(ServerResponse)]: [Function: ServerResponse],
	       [Symbol(kCapture)]: false,
	       [Symbol(async_id_symbol)]: 63,
	       [Symbol(http.server.connections)]: ConnectionsList {},
	       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
	         _idleTimeout: 30000,
	         _idlePrev: [TimersList],
	         _idleNext: [TimersList],
	         _idleStart: 774,
	         _onTimeout: [Function: bound checkConnections],
	         _timerArgs: undefined,
	         _repeat: 30000,
	         _destroyed: false,
	         [Symbol(refed)]: false,
	         [Symbol(kHasPrimitive)]: false,
	         [Symbol(asyncId)]: 62,
	         [Symbol(triggerId)]: 0
	       },
	       [Symbol(kUniqueHeaders)]: null
	     },
	     _server: Server {
	       maxHeaderSize: undefined,
	       insecureHTTPParser: undefined,
	       requestTimeout: 300000,
	       headersTimeout: 60000,
	       keepAliveTimeout: 5000,
	       connectionsCheckingInterval: 30000,
	       requireHostHeader: true,
	       joinDuplicateHeaders: undefined,
	       rejectNonStandardBodyWrites: false,
	       _events: [Object: null prototype],
	       _eventsCount: 5,
	       _maxListeners: undefined,
	       _connections: 5,
	       _handle: [TCP],
	       _usingWorkers: false,
	       _workers: [],
	       _unref: false,
	       allowHalfOpen: true,
	       pauseOnConnect: false,
	       noDelay: true,
	       keepAlive: false,
	       keepAliveInitialDelay: 0,
	       highWaterMark: 16384,
	       httpAllowHalfOpen: false,
	       timeout: 0,
	       maxHeadersCount: null,
	       maxRequestsPerSocket: 0,
	       _connectionKey: '6::::3000',
	       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
	       [Symbol(ServerResponse)]: [Function: ServerResponse],
	       [Symbol(kCapture)]: false,
	       [Symbol(async_id_symbol)]: 63,
	       [Symbol(http.server.connections)]: ConnectionsList {},
	       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
	         _idleTimeout: 30000,
	         _idlePrev: [TimersList],
	         _idleNext: [TimersList],
	         _idleStart: 774,
	         _onTimeout: [Function: bound checkConnections],
	         _timerArgs: undefined,
	         _repeat: 30000,
	         _destroyed: false,
	         [Symbol(refed)]: false,
	         [Symbol(kHasPrimitive)]: false,
	         [Symbol(asyncId)]: 62,
	         [Symbol(triggerId)]: 0
	       },
	       [Symbol(kUniqueHeaders)]: null
	     },
	     parser: HTTPParser {
	       '0': null,
	       '1': [Function: parserOnHeaders],
	       '2': [Function: parserOnHeadersComplete],
	       '3': [Function: parserOnBody],
	       '4': [Function: parserOnMessageComplete],
	       '5': [Function: bound onParserExecute],
	       '6': [Function: bound onParserTimeout],
	       _headers: [],
	       _url: '',
	       socket: [Circular *1],
	       incoming: [Circular *2],
	       outgoing: null,
	       maxHeaderPairs: 2000,
	       _consumed: true,
	       onIncoming: [Function: bound parserOnIncoming],
	       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
	     },
	     on: [Function: socketListenerWrap],
	     addListener: [Function: socketListenerWrap],
	     prependListener: [Function: socketListenerWrap],
	     setEncoding: [Function: socketSetEncoding],
	     _paused: false,
	     _httpMessage: ServerResponse {
	       _events: [Object: null prototype],
	       _eventsCount: 1,
	       _maxListeners: undefined,
	       outputData: [],
	       outputSize: 0,
	       writable: true,
	       destroyed: false,
	       _last: false,
	       chunkedEncoding: false,
	       shouldKeepAlive: true,
	       maxRequestsOnConnectionReached: false,
	       _defaultKeepAlive: true,
	       useChunkedEncodingByDefault: true,
	       sendDate: true,
	       _removedConnection: false,
	       _removedContLen: false,
	       _removedTE: false,
	       strictContentLength: false,
	       _contentLength: null,
	       _hasBody: true,
	       _trailer: '',
	       finished: false,
	       _headerSent: false,
	       _closed: false,
	       socket: [Circular *1],
	       _header: null,
	       _keepAliveTimeout: 5000,
	       _onPendingData: [Function: bound updateOutgoingData],
	       req: [Circular *2],
	       _sent100: false,
	       _expect_continue: false,
	       _maxRequestsPerSocket: 0,
	       locals: [Object: null prototype] {},
	       [Symbol(kCapture)]: false,
	       [Symbol(kBytesWritten)]: 0,
	       [Symbol(kNeedDrain)]: false,
	       [Symbol(corked)]: 0,
	       [Symbol(kOutHeaders)]: [Object: null prototype],
	       [Symbol(errored)]: null,
	       [Symbol(kHighWaterMark)]: 16384,
	       [Symbol(kRejectNonStandardBodyWrites)]: false,
	       [Symbol(kUniqueHeaders)]: null
	     },
	     _peername: { address: '::ffff:172.19.0.1', family: 'IPv6', port: 64460 },
	     timeout: 0,
	     [Symbol(async_id_symbol)]: 66,
	     [Symbol(kHandle)]: TCP {
	       reading: true,
	       onconnection: null,
	       _consumed: true,
	       [Symbol(owner_symbol)]: [Circular *1]
	     },
	     [Symbol(lastWriteQueueSize)]: 0,
	     [Symbol(timeout)]: Timeout {
	       _idleTimeout: -1,
	       _idlePrev: null,
	       _idleNext: null,
	       _idleStart: 4970,
	       _onTimeout: null,
	       _timerArgs: undefined,
	       _repeat: null,
	       _destroyed: true,
	       [Symbol(refed)]: false,
	       [Symbol(kHasPrimitive)]: false,
	       [Symbol(asyncId)]: 253,
	       [Symbol(triggerId)]: 249
	     },
	     [Symbol(kBuffer)]: null,
	     [Symbol(kBufferCb)]: null,
	     [Symbol(kBufferGen)]: null,
	     [Symbol(kCapture)]: false,
	     [Symbol(kSetNoDelay)]: true,
	     [Symbol(kSetKeepAlive)]: false,
	     [Symbol(kSetKeepAliveInitialDelay)]: 0,
	     [Symbol(kBytesRead)]: 0,
	     [Symbol(kBytesWritten)]: 0
	   },
	   httpVersionMajor: 1,
	   httpVersionMinor: 1,
	   httpVersion: '1.1',
	   complete: true,
	   rawHeaders: [
	     'Host',
	     'localhost:3000',
	     'Connection',
	     'keep-alive',
	     'Content-Length',
	     '16',
	     'Pragma',
	     'no-cache',
	     'Cache-Control',
	     'no-cache',
	     'sec-ch-ua',
	     '"Google Chrome";v="111", "Not(A:Brand";v="8", "Chromium";v="111"',
	     'Content-Type',
	     'application/json',
	     'sec-ch-ua-mobile',
	     '?0',
	     'Authorization',
	     'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwib3duZXIiOiJlbW9ta3VzIiwiaWF0IjoxNjg1NzIwODU4LCJleHAiOjE2ODU4MDcyNTh9.s6qq6BcTJjN-48P-_KFD3GcRq5TA5pUwQb7PewK7b_8',
	     'User-Agent',
	     'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36',
	     'sec-ch-ua-platform',
	     '"macOS"',
	     'Accept',
	     '*/*',
	     'Origin',
	     'http://localhost:3030',
	     'Sec-Fetch-Site',
	     'same-site',
	     'Sec-Fetch-Mode',
	     'cors',
	     'Sec-Fetch-Dest',
	     'empty',
	     'Referer',
	     'http://localhost:3030/',
	     'Accept-Encoding',
	     'gzip, deflate, br',
	     'Accept-Language',
	     'en-GB,en;q=0.9,en-US;q=0.8,it;q=0.7,lt;q=0.6'
	   ],
	   rawTrailers: [],
	   joinDuplicateHeaders: undefined,
	   aborted: false,
	   upgrade: false,
	   url: '/users/manage/send-friend-request',
	   method: 'POST',
	   statusCode: null,
	   statusMessage: null,
	   client: <ref *1> Socket {
	     connecting: false,
	     _hadError: false,
	     _parent: null,
	     _host: null,
	     _closeAfterHandlingError: false,
	     _readableState: ReadableState {
	       objectMode: false,
	       highWaterMark: 16384,
	       buffer: BufferList { head: null, tail: null, length: 0 },
	       length: 0,
	       pipes: [],
	       flowing: true,
	       ended: false,
	       endEmitted: false,
	       reading: true,
	       constructed: true,
	       sync: false,
	       needReadable: true,
	       emittedReadable: false,
	       readableListening: false,
	       resumeScheduled: false,
	       errorEmitted: false,
	       emitClose: false,
	       autoDestroy: true,
	       destroyed: false,
	       errored: null,
	       closed: false,
	       closeEmitted: false,
	       defaultEncoding: 'utf8',
	       awaitDrainWriters: null,
	       multiAwaitDrain: false,
	       readingMore: false,
	       dataEmitted: false,
	       decoder: null,
	       encoding: null,
	       [Symbol(kPaused)]: false
	     },
	     _events: [Object: null prototype] {
	       end: [Array],
	       timeout: [Function: socketOnTimeout],
	       data: [Function: bound socketOnData],
	       error: [Function: socketOnError],
	       close: [Array],
	       drain: [Function: bound socketOnDrain],
	       resume: [Function: onSocketResume],
	       pause: [Function: onSocketPause]
	     },
	     _eventsCount: 8,
	     _maxListeners: undefined,
	     _writableState: WritableState {
	       objectMode: false,
	       highWaterMark: 16384,
	       finalCalled: false,
	       needDrain: false,
	       ending: false,
	       ended: false,
	       finished: false,
	       destroyed: false,
	       decodeStrings: false,
	       defaultEncoding: 'utf8',
	       length: 0,
	       writing: false,
	       corked: 0,
	       sync: false,
	       bufferProcessing: false,
	       onwrite: [Function: bound onwrite],
	       writecb: null,
	       writelen: 0,
	       afterWriteTickInfo: null,
	       buffered: [],
	       bufferedIndex: 0,
	       allBuffers: true,
	       allNoop: true,
	       pendingcb: 0,
	       constructed: true,
	       prefinished: false,
	       errorEmitted: false,
	       emitClose: false,
	       autoDestroy: true,
	       errored: null,
	       closed: false,
	       closeEmitted: false,
	       [Symbol(kOnFinished)]: []
	     },
	     allowHalfOpen: true,
	     _sockname: null,
	     _pendingData: null,
	     _pendingEncoding: '',
	     server: Server {
	       maxHeaderSize: undefined,
	       insecureHTTPParser: undefined,
	       requestTimeout: 300000,
	       headersTimeout: 60000,
	       keepAliveTimeout: 5000,
	       connectionsCheckingInterval: 30000,
	       requireHostHeader: true,
	       joinDuplicateHeaders: undefined,
	       rejectNonStandardBodyWrites: false,
	       _events: [Object: null prototype],
	       _eventsCount: 5,
	       _maxListeners: undefined,
	       _connections: 5,
	       _handle: [TCP],
	       _usingWorkers: false,
	       _workers: [],
	       _unref: false,
	       allowHalfOpen: true,
	       pauseOnConnect: false,
	       noDelay: true,
	       keepAlive: false,
	       keepAliveInitialDelay: 0,
	       highWaterMark: 16384,
	       httpAllowHalfOpen: false,
	       timeout: 0,
	       maxHeadersCount: null,
	       maxRequestsPerSocket: 0,
	       _connectionKey: '6::::3000',
	       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
	       [Symbol(ServerResponse)]: [Function: ServerResponse],
	       [Symbol(kCapture)]: false,
	       [Symbol(async_id_symbol)]: 63,
	       [Symbol(http.server.connections)]: ConnectionsList {},
	       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
	         _idleTimeout: 30000,
	         _idlePrev: [TimersList],
	         _idleNext: [TimersList],
	         _idleStart: 774,
	         _onTimeout: [Function: bound checkConnections],
	         _timerArgs: undefined,
	         _repeat: 30000,
	         _destroyed: false,
	         [Symbol(refed)]: false,
	         [Symbol(kHasPrimitive)]: false,
	         [Symbol(asyncId)]: 62,
	         [Symbol(triggerId)]: 0
	       },
	       [Symbol(kUniqueHeaders)]: null
	     },
	     _server: Server {
	       maxHeaderSize: undefined,
	       insecureHTTPParser: undefined,
	       requestTimeout: 300000,
	       headersTimeout: 60000,
	       keepAliveTimeout: 5000,
	       connectionsCheckingInterval: 30000,
	       requireHostHeader: true,
	       joinDuplicateHeaders: undefined,
	       rejectNonStandardBodyWrites: false,
	       _events: [Object: null prototype],
	       _eventsCount: 5,
	       _maxListeners: undefined,
	       _connections: 5,
	       _handle: [TCP],
	       _usingWorkers: false,
	       _workers: [],
	       _unref: false,
	       allowHalfOpen: true,
	       pauseOnConnect: false,
	       noDelay: true,
	       keepAlive: false,
	       keepAliveInitialDelay: 0,
	       highWaterMark: 16384,
	       httpAllowHalfOpen: false,
	       timeout: 0,
	       maxHeadersCount: null,
	       maxRequestsPerSocket: 0,
	       _connectionKey: '6::::3000',
	       [Symbol(IncomingMessage)]: [Function: IncomingMessage],
	       [Symbol(ServerResponse)]: [Function: ServerResponse],
	       [Symbol(kCapture)]: false,
	       [Symbol(async_id_symbol)]: 63,
	       [Symbol(http.server.connections)]: ConnectionsList {},
	       [Symbol(http.server.connectionsCheckingInterval)]: Timeout {
	         _idleTimeout: 30000,
	         _idlePrev: [TimersList],
	         _idleNext: [TimersList],
	         _idleStart: 774,
	         _onTimeout: [Function: bound checkConnections],
	         _timerArgs: undefined,
	         _repeat: 30000,
	         _destroyed: false,
	         [Symbol(refed)]: false,
	         [Symbol(kHasPrimitive)]: false,
	         [Symbol(asyncId)]: 62,
	         [Symbol(triggerId)]: 0
	       },
	       [Symbol(kUniqueHeaders)]: null
	     },
	     parser: HTTPParser {
	       '0': null,
	       '1': [Function: parserOnHeaders],
	       '2': [Function: parserOnHeadersComplete],
	       '3': [Function: parserOnBody],
	       '4': [Function: parserOnMessageComplete],
	       '5': [Function: bound onParserExecute],
	       '6': [Function: bound onParserTimeout],
	       _headers: [],
	       _url: '',
	       socket: [Circular *1],
	       incoming: [Circular *2],
	       outgoing: null,
	       maxHeaderPairs: 2000,
	       _consumed: true,
	       onIncoming: [Function: bound parserOnIncoming],
	       [Symbol(resource_symbol)]: [HTTPServerAsyncResource]
	     },
	     on: [Function: socketListenerWrap],
	     addListener: [Function: socketListenerWrap],
	     prependListener: [Function: socketListenerWrap],
	     setEncoding: [Function: socketSetEncoding],
	     _paused: false,
	     _httpMessage: ServerResponse {
	       _events: [Object: null prototype],
	       _eventsCount: 1,
	       _maxListeners: undefined,
	       outputData: [],
	       outputSize: 0,
	       writable: true,
	       destroyed: false,
	       _last: false,
	       chunkedEncoding: false,
	       shouldKeepAlive: true,
	       maxRequestsOnConnectionReached: false,
	       _defaultKeepAlive: true,
	       useChunkedEncodingByDefault: true,
	       sendDate: true,
	       _removedConnection: false,
	       _removedContLen: false,
	       _removedTE: false,
	       strictContentLength: false,
	       _contentLength: null,
	       _hasBody: true,
	       _trailer: '',
	       finished: false,
	       _headerSent: false,
	       _closed: false,
	       socket: [Circular *1],
	       _header: null,
	       _keepAliveTimeout: 5000,
	       _onPendingData: [Function: bound updateOutgoingData],
	       req: [Circular *2],
	       _sent100: false,
	       _expect_continue: false,
	       _maxRequestsPerSocket: 0,
	       locals: [Object: null prototype] {},
	       [Symbol(kCapture)]: false,
	       [Symbol(kBytesWritten)]: 0,
	       [Symbol(kNeedDrain)]: false,
	       [Symbol(corked)]: 0,
	       [Symbol(kOutHeaders)]: [Object: null prototype],
	       [Symbol(errored)]: null,
	       [Symbol(kHighWaterMark)]: 16384,
	       [Symbol(kRejectNonStandardBodyWrites)]: false,
	       [Symbol(kUniqueHeaders)]: null
	     },
	     _peername: { address: '::ffff:172.19.0.1', family: 'IPv6', port: 64460 },
	     timeout: 0,
	     [Symbol(async_id_symbol)]: 66,
	     [Symbol(kHandle)]: TCP {
	       reading: true,
	       onconnection: null,
	       _consumed: true,
	       [Symbol(owner_symbol)]: [Circular *1]
	     },
	     [Symbol(lastWriteQueueSize)]: 0,
	     [Symbol(timeout)]: Timeout {
	       _idleTimeout: -1,
	       _idlePrev: null,
	       _idleNext: null,
	       _idleStart: 4970,
	       _onTimeout: null,
	       _timerArgs: undefined,
	       _repeat: null,
	       _destroyed: true,
	       [Symbol(refed)]: false,
	       [Symbol(kHasPrimitive)]: false,
	       [Symbol(asyncId)]: 253,
	       [Symbol(triggerId)]: 249
	     },
	     [Symbol(kBuffer)]: null,
	     [Symbol(kBufferCb)]: null,
	     [Symbol(kBufferGen)]: null,
	     [Symbol(kCapture)]: false,
	     [Symbol(kSetNoDelay)]: true,
	     [Symbol(kSetKeepAlive)]: false,
	     [Symbol(kSetKeepAliveInitialDelay)]: 0,
	     [Symbol(kBytesRead)]: 0,
	     [Symbol(kBytesWritten)]: 0
	   },
	   _consuming: true,
	   _dumped: false,
	   next: [Function: next],
	   baseUrl: '',
	   originalUrl: '/users/manage/send-friend-request',
	   _parsedUrl: Url {
	     protocol: null,
	     slashes: null,
	     auth: null,
	     host: null,
	     port: null,
	     hostname: null,
	     hash: null,
	     search: null,
	     query: null,
	     pathname: '/users/manage/send-friend-request',
	     path: '/users/manage/send-friend-request',
	     href: '/users/manage/send-friend-request',
	     _raw: '/users/manage/send-friend-request'
	   },
	   params: {},
	   query: {},
	   res: <ref *3> ServerResponse {
	     _events: [Object: null prototype] { finish: [Function: bound resOnFinish] },
	     _eventsCount: 1,
	     _maxListeners: undefined,
	     outputData: [],
	     outputSize: 0,
	     writable: true,
	     destroyed: false,
	     _last: false,
	     chunkedEncoding: false,
	     shouldKeepAlive: true,
	     maxRequestsOnConnectionReached: false,
	     _defaultKeepAlive: true,
	     useChunkedEncodingByDefault: true,
	     sendDate: true,
	     _removedConnection: false,
	     _removedContLen: false,
	     _removedTE: false,
	     strictContentLength: false,
	     _contentLength: null,
	     _hasBody: true,
	     _trailer: '',
	     finished: false,
	     _headerSent: false,
	     _closed: false,
	     socket: <ref *1> Socket {
	       connecting: false,
	       _hadError: false,
	       _parent: null,
	       _host: null,
	       _closeAfterHandlingError: false,
	       _readableState: [ReadableState],
	       _events: [Object: null prototype],
	       _eventsCount: 8,
	       _maxListeners: undefined,
	       _writableState: [WritableState],
	       allowHalfOpen: true,
	       _sockname: null,
	       _pendingData: null,
	       _pendingEncoding: '',
	       server: [Server],
	       _server: [Server],
	       parser: [HTTPParser],
	       on: [Function: socketListenerWrap],
	       addListener: [Function: socketListenerWrap],
	       prependListener: [Function: socketListenerWrap],
	       setEncoding: [Function: socketSetEncoding],
	       _paused: false,
	       _httpMessage: [Circular *3],
	       _peername: [Object],
	       timeout: 0,
	       [Symbol(async_id_symbol)]: 66,
	       [Symbol(kHandle)]: [TCP],
	       [Symbol(lastWriteQueueSize)]: 0,
	       [Symbol(timeout)]: Timeout {
	         _idleTimeout: -1,
	         _idlePrev: null,
	         _idleNext: null,
	         _idleStart: 4970,
	         _onTimeout: null,
	         _timerArgs: undefined,
	         _repeat: null,
	         _destroyed: true,
	         [Symbol(refed)]: false,
	         [Symbol(kHasPrimitive)]: false,
	         [Symbol(asyncId)]: 253,
	         [Symbol(triggerId)]: 249
	       },
	       [Symbol(kBuffer)]: null,
	       [Symbol(kBufferCb)]: null,
	       [Symbol(kBufferGen)]: null,
	       [Symbol(kCapture)]: false,
	       [Symbol(kSetNoDelay)]: true,
	       [Symbol(kSetKeepAlive)]: false,
	       [Symbol(kSetKeepAliveInitialDelay)]: 0,
	       [Symbol(kBytesRead)]: 0,
	       [Symbol(kBytesWritten)]: 0
	     },
	     _header: null,
	     _keepAliveTimeout: 5000,
	     _onPendingData: [Function: bound updateOutgoingData],
	     req: [Circular *2],
	     _sent100: false,
	     _expect_continue: false,
	     _maxRequestsPerSocket: 0,
	     locals: [Object: null prototype] {},
	     [Symbol(kCapture)]: false,
	     [Symbol(kBytesWritten)]: 0,
	     [Symbol(kNeedDrain)]: false,
	     [Symbol(corked)]: 0,
	     [Symbol(kOutHeaders)]: [Object: null prototype] {
	       'x-powered-by': [Array],
	       'access-control-allow-origin': [Array],
	       vary: [Array],
	       'access-control-allow-credentials': [Array]
	     },
	     [Symbol(errored)]: null,
	     [Symbol(kHighWaterMark)]: 16384,
	     [Symbol(kRejectNonStandardBodyWrites)]: false,
	     [Symbol(kUniqueHeaders)]: null
	   },
	   secret: undefined,
	   cookies: [Object: null prototype] {},
	   signedCookies: [Object: null prototype] {},
	   body: { receiverId: 1 },
	   _body: true,
	   length: undefined,
	   route: Route {
	     path: '/users/manage/send-friend-request',
	     stack: [ [Layer] ],
	     methods: { post: true }
	   },
	   [Symbol(kCapture)]: false,
	   [Symbol(kHeaders)]: {
	     host: 'localhost:3000',
	     connection: 'keep-alive',
	     'content-length': '16',
	     pragma: 'no-cache',
	     'cache-control': 'no-cache',
	     'sec-ch-ua': '"Google Chrome";v="111", "Not(A:Brand";v="8", "Chromium";v="111"',
	     'content-type': 'application/json',
	     'sec-ch-ua-mobile': '?0',
	     authorization: 'Bearer eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJpZCI6MSwib3duZXIiOiJlbW9ta3VzIiwiaWF0IjoxNjg1NzIwODU4LCJleHAiOjE2ODU4MDcyNTh9.s6qq6BcTJjN-48P-_KFD3GcRq5TA5pUwQb7PewK7b_8',
	     'user-agent': 'Mozilla/5.0 (Macintosh; Intel Mac OS X 10_15_7) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/111.0.0.0 Safari/537.36',
	     'sec-ch-ua-platform': '"macOS"',
	     accept: '*/*',
	     origin: 'http://localhost:3030',
	     'sec-fetch-site': 'same-site',
	     'sec-fetch-mode': 'cors',
	     'sec-fetch-dest': 'empty',
	     referer: 'http://localhost:3030/',
	     'accept-encoding': 'gzip, deflate, br',
	     'accept-language': 'en-GB,en;q=0.9,en-US;q=0.8,it;q=0.7,lt;q=0.6'
	   },
	   [Symbol(kHeadersCount)]: 38,
	   [Symbol(kTrailers)]: null,
	   [Symbol(kTrailersCount)]: 0
	 }
